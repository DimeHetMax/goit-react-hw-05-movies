{"version":3,"file":"static/js/986.fa0590fa.chunk.js","mappings":"gQAEaA,EAAYC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8FAMrBC,EAAOH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qUAUjBG,EAAML,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4BAGfK,EAAOP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uDAIfO,EAAWT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,gC,SC2BhC,EA9Ca,WACT,IAAOS,GAAWC,EAAAA,EAAAA,MAAXD,QACPE,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAS1B,OARAG,EAAAA,EAAAA,YAAU,WACND,GAAW,IAEXE,EAAAA,EAAAA,IAAqBjB,GACpBkB,MAAK,SAAAC,GAAG,OAAIZ,EAASY,EAAIC,KAAK,IAC9BC,OAAM,SAACX,GAAK,OAAKC,EAASD,EAAM,IAChCY,SAAQ,kBAAMP,GAAW,EAAM,GAChC,GAAE,CAACf,IACHU,GACOa,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,UAAQd,EAAMe,YAI1BC,EAAAA,EAAAA,KAAA,OAAAF,SACKV,GACMY,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACRJ,EAAAA,EAAAA,MAACnC,EAAS,CAAAoC,SAAA,CACU,IAAjBlB,EAAMsB,QACDF,EAAAA,EAAAA,KAAA,MAAAF,UAAIE,EAAAA,EAAAA,KAAA,OAAAF,SAAK,0BACTlB,EAAMuB,KAAI,SAAAC,GAAA,IAAEC,EAAED,EAAFC,GAAIC,EAAaF,EAAbE,cAAeC,EAAUH,EAAVG,WAAYC,EAAYJ,EAAZI,aAAcC,EAASL,EAATK,UAAS,OAChET,EAAAA,EAAAA,KAAA,MAAAF,UACIE,EAAAA,EAAAA,KAAClC,EAAI,CAAAgC,UACLD,EAAAA,EAAAA,MAACzB,EAAQ,CAACsC,KAAM,iCAAiCJ,EAAcK,QAAQ,KAAM,KAAMC,OAAO,SAC1FC,IAAI,sBAAqBf,SAAA,EACrBE,EAAAA,EAAAA,KAAA,OAAKc,IAAKN,EAAe,mCAAoCA,EAAe,kEAAoEO,IAAKT,KACrJN,EAAAA,EAAAA,KAAA,MAAAF,SAAKQ,KACLT,EAAAA,EAAAA,MAAC3B,EAAI,CAAA4B,SAAA,CAAC,cAAYW,MAClBZ,EAAAA,EAAAA,MAAC3B,EAAI,CAAA4B,SAAA,CAAC,eAAcS,EAAYS,QAAQ,GAAG,aAExC,GAAAC,OATCZ,EAAE,KAAAY,OAAIX,GAUb,KAGTN,EAAAA,EAAAA,KAAChC,EAAG,CAAA8B,UAACE,EAAAA,EAAAA,KAAA,cACLA,EAAAA,EAAAA,KAAChC,EAAG,CAAA8B,UAACE,EAAAA,EAAAA,KAAA,iBAK7B,C","sources":["components/CastCredit/Cast.styled.js","components/CastCredit/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.ul`\ndisplay: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 20px;\n`;\nexport const Card = styled.div`\n    width: 200px; \n    padding: 5px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\n    transition: transform 0.2s, box-shadow 0.2s;\n    &:hover {\n        transform: scale(1.05); /* Increase the size on hover */\n        box-shadow: 0 8px 12px rgba(0, 0, 0, 0.4); /* Add a stronger shadow on hover */\n      }\n`;\nexport const Box = styled.li`\n    width: 200px\n`;\nexport const Text = styled.p`\n    line-height: 1.4;\n    font-size: 14px;\n`\nexport const LinkWiki = styled.a`\n      color:#000000;\n`","import { useParams } from \"react-router-dom\"\nimport {searchMoviesCastById} from \"../../Api\"\nimport { useEffect, useState } from \"react\"\nimport Loader from \"components/Loader/Loader\"\nimport {Container, Card, Box, Text, LinkWiki} from \"./Cast.styled\"\n\nconst Cast = () =>{\n    const {movieId} = useParams()\n    const [movie, setMovie] = useState([])\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);  \n    useEffect(()=>{\n        setLoading(true)\n\n        searchMoviesCastById(movieId)\n        .then(res => setMovie(res.cast))\n        .catch((error) => setError(error))\n        .finally(() => setLoading(false))\n        },[movieId])\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } \n\n    return(\n        <div>\n            {loading \n                ?( <Loader />)\n                :(<Container>\n                    {movie.length === 0 \n                        ?(<li><div>No Cast information</div></li>)\n                        :(movie.map(({id, original_name, popularity, profile_path, character})=> \n                            <li key={`${id}_${original_name}`}>\n                                <Card>\n                                <LinkWiki href={`https://en.wikipedia.org/wiki/`+original_name.replace(/ /g, '_')} target=\"_blank\"\n                                rel=\"noopener noreferrer\">\n                                    <img src={profile_path ?(\"https://image.tmdb.org/t/p/w200/\"+ profile_path):(\"https://image.tmdb.org/t/p/w200/wwemzKWzjKYJFfCeiB57q3r4Bcm.png\")} alt={original_name} />\n                                    <h3>{original_name}</h3>\n                                    <Text>Character: {character}</Text>\n                                    <Text>Popularity: {(popularity).toFixed(0)}%</Text>\n                                </LinkWiki>    \n                                </Card>\n                            </li>\n                            )\n                        )}\n                        <Box><span></span></Box> \n                        <Box><span></span></Box>  \n                </Container>)\n            } \n        </div>\n    )\n}\n\nexport default Cast"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Card","_templateObject2","Box","_templateObject3","Text","_templateObject4","LinkWiki","_templateObject5","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","searchMoviesCastById","then","res","cast","catch","finally","_jsxs","children","message","_jsx","Loader","length","map","_ref","id","original_name","popularity","profile_path","character","href","replace","target","rel","src","alt","toFixed","concat"],"sourceRoot":""}